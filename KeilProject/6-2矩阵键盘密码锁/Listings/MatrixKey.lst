C51 COMPILER V9.54   MATRIXKEY                                                             08/09/2023 23:00:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MATRIXKEY
OBJECT MODULE PLACED IN .\Objects\MatrixKey.obj
COMPILER INVOKED BY: F:\Keli5\C51\BIN\C51.EXE MatrixKey.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\M
                    -atrixKey.lst) TABS(2) OBJECT(.\Objects\MatrixKey.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay1.h"
   3          /**
   4            * @brief  矩阵键盘读取按键键码
   5            * @param  无
   6            * @param    
   7            * @retval  返回值：KeyNumber 按下按键的键码值，
   8                            如果按键按键按下不松手，程序会停留在此函数
   9                    松手的一瞬间，返回键码值，没有按键按下时，返回0.
  10            */
  11          unsigned char MatrixKey()
  12          {
  13   1         unsigned char KeyNumber =0;//局部变量使用要赋初值
  14   1        //这个是为了用于区分键盘的每一个编号 
  15   1        
  16   1        // 扫描第一列的键盘
  17   1           P1=0xFF;//此时P1全部置高电平
  18   1           P1_3=0;//数字键盘的第一列全部置0
  19   1          //s1按键的检测
  20   1           if(P1_7==0)
  21   1           {//检测松手的几个基本函数 
  22   2           Delay1(10);while(P1_7==0);Delay1(20);KeyNumber=1;}     
  23   1           if(P1_6==0)
  24   1           {//检测松手的几个基本函数 
  25   2           Delay1(10);while(P1_6==0);Delay1(20);KeyNumber=5;}      
  26   1           if(P1_5==0)
  27   1           {//检测松手的几个基本函数 
  28   2           Delay1(10);while(P1_5==0);Delay1(20);KeyNumber=9;} 
  29   1           if(P1_4==0)
  30   1           {//检测松手的几个基本函数 
  31   2           Delay1(10);while(P1_4==0);Delay1(20);KeyNumber=13;}  
  32   1        
  33   1           // 扫描第二列的键盘
  34   1           P1=0xFF;//此时P1全部置高电平
  35   1           P1_2=0;//数字键盘的第二列全部置0
  36   1          //s1按键的检测
  37   1           if(P1_7==0)
  38   1           {//检测松手的几个基本函数 
  39   2           Delay1(10);while(P1_7==0);Delay1(20);KeyNumber=2;}     
  40   1           if(P1_6==0)
  41   1           {//检测松手的几个基本函数 
  42   2           Delay1(10);while(P1_6==0);Delay1(20);KeyNumber=6;}      
  43   1           if(P1_5==0)
  44   1           {//检测松手的几个基本函数 
  45   2           Delay1(10);while(P1_5==0);Delay1(20);KeyNumber=10;}  
  46   1           if(P1_4==0)
  47   1           {//检测松手的几个基本函数 
  48   2           Delay1(10);while(P1_4==0);Delay1(20);KeyNumber=14;}  
  49   1           
  50   1           // 扫描第三列的键盘，每一列连接的代号
  51   1           P1=0xFF;//此时P1全部置高电平
  52   1           P1_1=0;//数字键盘的第一列全部置0
  53   1          //s1按键的检测
  54   1           if(P1_7==0)
C51 COMPILER V9.54   MATRIXKEY                                                             08/09/2023 23:00:48 PAGE 2   

  55   1           {//检测松手的几个基本函数 
  56   2           Delay1(10);while(P1_7==0);Delay1(20);KeyNumber=3;}     
  57   1           if(P1_6==0)
  58   1           {//检测松手的几个基本函数 
  59   2           Delay1(10);while(P1_6==0);Delay1(20);KeyNumber=7;}      
  60   1           if(P1_5==0)
  61   1           {//检测松手的几个基本函数 
  62   2           Delay1(10);while(P1_5==0);Delay1(20);KeyNumber=11;}  
  63   1           if(P1_4==0)
  64   1           {//检测松手的几个基本函数 
  65   2           Delay1(10);while(P1_4==0);Delay1(20);KeyNumber=15;}  
  66   1           
  67   1           // 扫描第一列的键盘
  68   1           P1=0xFF;//此时P1全部置高电平
  69   1           P1_0=0;//数字键盘的第一列全部置0
  70   1          //s1按键的检测
  71   1           if(P1_7==0)
  72   1           {//检测松手的几个基本函数 
  73   2           Delay1(10);while(P1_7==0);Delay1(20);KeyNumber=4;}     
  74   1           if(P1_6==0)
  75   1           {//检测松手的几个基本函数 
  76   2           Delay1(10);while(P1_6==0);Delay1(20);KeyNumber=8;}      
  77   1           if(P1_5==0)
  78   1           {//检测松手的几个基本函数 
  79   2           Delay1(10);while(P1_5==0);Delay1(20);KeyNumber=12;}  
  80   1           if(P1_4==0)
  81   1           {//检测松手的几个基本函数 
  82   2           Delay1(10);while(P1_4==0);Delay1(20);KeyNumber=16;}  
  83   1           
  84   1           return KeyNumber;
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
